config:
  datasource:
    password: "password"
  sqlexporter: |-
    global:
      # Subtracted from Prometheus' scrape_timeout to give us some headroom and prevent Prometheus from
      # timing out first.
      scrape_timeout_offset: 500ms
      # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.
      min_interval: 0s
      # Maximum number of open connections to any one target. Metric queries will run concurrently on
      # multiple connections.
      max_connections: 3
      # Maximum number of idle connections to any one target.
      max_idle_connections: 3
      # The target to monitor and the collectors to execute on it.
    target:
      # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)
      # the schema gets dropped or replaced to match the driver expected DSN format.
      data_source_name: 'sqlserver://{{ $DB.user }}:{{ b64dec ($.Environment.Values  | get (printf "%s_PROMETHEUS_EXPORTER_MSSQLDB_PASSWORD" $DB.password)) }}@localhost:{{ $DB.port }}'
      # Collectors (referenced by name) to execute on the target.
      collectors: [mssql_standard]
    collectors:
      # A collector defining standard metrics for Microsoft SQL Server.
      - collector_name: mssql_standard
        metrics:
          - metric_name: standard_mssql_local_time_seconds
            type: gauge
            help: 'Local time in seconds since epoch (Unix time).'
            values: [unix_time]
            query: |
              SELECT DATEDIFF(second, '19700101', GETUTCDATE()) AS unix_time
